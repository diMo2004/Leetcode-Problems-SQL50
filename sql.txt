1757. Recyclable and Low Fat Products:
Select product_id 
from Products 
where low_fats = 'Y' and recyclable = 'Y';

584. Find Customer Referee:
Select name 
from Customer 
where referee_id is null or referee_id != 2;

595. Big Countries:
Select name, population, area 
from World 
where area >= 3000000 or population >= 25000000;

1148. Article Views I:
Select distinct author_id as id 
from Views 
where author_id = viewer_id 
order by author_id; 

1683. Invalid Tweets:
Select tweet_id 
from Tweets 
where char_length(content) > 15;

1378. Replace Employee ID with the Unique Identifier:
Select unique_id, name 
from Employees left outer join EmployeeUNI 
on Employees.id = EmployeeUNI.id;

1068. Products Sales Analysis I:
Select product_name, year, price 
from Sales inner join Product 
on Sales.product_id = Product.product_id;

1581. Customer Who Visited but Did Not Make Any Transactions:
Select customer_id, count(customer_id) 
as count_no_trans 
from Visits left outer join Transactions 
on Visits.visit_id = Transactions.visit_id 
where Transactions.visit_id is null 
group by customer_id;

197. Rising Temperature:
Select distinct W1.id 
from Weather as W1 cross join Weather as W2 
where DateDiff(W1.recordDate, W2.recordDate) = 1 and 
W1.temperature > W2.temperature;

1661. Average Time of Process per Machine:
Select machine_id, 
round(
    sum(
        case 
        when activity_type = 'start' 
        then timestamp*-1 
        else timestamp end
        )*1.0/
        (Select count(distinct process_id)),3
    ) as processing_time 
from Activity 
group by machine_id;

1280. Students and Examinations:
Select Students.student_id, 
student_name, 
Subjects.subject_name, 
count(Examinations.student_id) as attended_exams 
from Students cross join Subjects left join Examinations 
on Students.student_id = Examinations.student_id 
and Subjects.subject_name = Examinations.subject_name 
group by Students.student_id, student_name, Subjects.subject_name 
order by Students.student_id, student_name, Subjects.subject_name;

570. Managers with at Least 5 Direct Reports:
SELECT E1.name
FROM Employee E1
JOIN (
    SELECT managerId, COUNT(*) AS directReports
    FROM Employee
    GROUP BY managerId
    HAVING COUNT(*) >= 5
) E2 ON E1.id = E2.managerId;

1934. Confirmation Rate:
Select Signups.user_id, 
round(
    (sum
    (case 
    when action = 'confirmed' then 1 
    when action is null then 0 
    else 0 end)*1.0)/
    (Select count(case when action is null then Signups.user_id else action end)),2) as confirmation_rate 
from Signups left join Confirmations 
on Signups.user_id = Confirmations.user_id 
group by Signups.user_id;

620. Boring Movies:
Select id, movie, description, rating 
from Cinema 
where description != 'boring' 
and id % 2 != 0 
order by rating desc;

1251. Average Selling Price:
Select Prices.product_id, 
round((sum(
    case when UnitsSold.units is not null then Prices.price*UnitsSold.units 
    when UnitsSold.units is null then 0 end)*1.0)/
    (Select sum(
        case when UnitsSold.units is not null then UnitsSold.units 
        when UnitsSold.units is null then 1 end)),2) as average_price 
from Prices left join UnitsSold 
on Prices.product_id = UnitsSold.product_id 
where purchase_date is null 
or timestamp(UnitsSold.purchase_date) >= timestamp(Prices.start_date) 
and timestamp(UnitsSold.purchase_date) <= timestamp(Prices.end_date) 
group by Prices.product_id;

1075. Project Employees I:
Select project_id, 
round(avg(experience_years),2) as average_years 
from Project inner join Employee 
on Project.employee_id = Employee.employee_id 
group by project_id;

1633. Percentage of Users Attended a Contest:
Select contest_id, round((count(Register.user_id)*100.0)/(Select count(*) from Users),2) as percentage 
from Users inner join Register on Users.user_id = Register.user_id
group by contest_id
order by percentage desc, contest_id asc;

1211. Queries Quality and Percentage:
Select
query_name,
round(avg(rating/position),2) as quality,
round((count(case when rating < 3 then rating end)*100.0)/(Select count(rating)),2) as poor_query_percentage
from Queries
group by query_name;

1193. Monthly Transactions I:
Select
date_format(trans_date, '%Y-%m') as month,
country,
count(id) as trans_count,
count(case when state = 'approved' then state end) as approved_count,
sum(amount) as trans_total_amount,
sum(case when state = 'approved' then amount else 0 end) as approved_total_amount
from Transactions
group by month, country;

1174. Immediate Food Delivery II:
With FirstOrder as (
    Select customer_id, min(order_date) as first_order_date
    from delivery
    group by customer_id
),
ImmediateFIrstOrder as (
    Select count(FirstOrder.customer_id) as immediate
    from FirstOrder inner join Delivery
    on FirstOrder.customer_id = Delivery.customer_id and FirstOrder.first_order_date = Delivery.order_date
    where FirstOrder.first_order_date = Delivery.customer_pref_delivery_date
),
TotalOrders as (
    Select count(distinct customer_id) as total
    from Delivery
)
Select round((Select immediate from ImmediateFirstOrder)*100.0/(Select total from TotalOrders),2) as immediate_percentage;

550. Game Play Analysis IV:
with FirstDate as (
    Select player_id as p,
    min(event_date) as first_date
    from Activity group by player_id
), SecondDate as (
    Select A.player_id as play_id, 
    A.event_date as second_date
    from FirstDate as FD cross join Activity as A
    on FD.p = A.player_id 
    where DateDiff(A.event_date,FD.first_date) = 1
), CountPlayers as (
    Select count(distinct play_id) as players
    from SecondDate
), TotalPlayers as (
    Select count(distinct player_id) as total
    from Activity
)
Select round((Select players from CountPlayers)*1.0/(Select total from TotalPlayers),2) as fraction;

2356. Number of Unique Subjects Taught by Each Teacher:
Select teacher_id,
count(distinct subject_id) as cnt
from Teacher group by teacher_id;

1141. User Activity for the Past 30 Days I:
Select activity_date as day,
count(distinct user_id) as active_users
from Activity where timestamp(Activity.activity_date) <= timestamp('2019-07-27') and 
timestamp(Activity.activity_date) >= timestamp('2019-06-28') 
group by day;

1070. Product Sales Analysis III:
with FirstYear as (
    Select product_id,
    min(year) as first_year
    from Sales group by product_id
)
Select FY.product_id, FY.first_year,
S.quantity, S.price
from FirstYear as FY inner join Sales as S
on FY.product_id = S.product_id and FY.first_year = S.year;

596. Classes More Than 5 Students:
with CNT as (
    Select class, 
    count(student) as cnt 
    from Courses group by class
)
Select distinct Courses.class from Courses cross join CNT on Courses.class = CNT.class where CNT.cnt >= 5;

1729. Find Followers Count:
Select user_id,
count(follower_id) as followers_count
from Followers 
group by user_id
order by user_id;

619. Biggest Single Number:
with Frequency as (
    Select num, 
    count(num) as freq
    from MyNumbers
    group by num 
), SingleNumber as (
    Select num
    from Frequency
    where freq = 1
)
Select max(num) as num from SingleNumber;

1045. Customers Who Bought All Products:
with TotalProducts as (
    Select count(*) as total 
    from Product
), BoughtProducts as (
    Select customer_id,
    count(distinct product_key) as bought
    from Customer
    group by customer_id
)
Select customer_id from TotalProducts, BoughtProducts where total = bought;

1731. The Number of Employees Which Report to Each Employee:
with Report as (
    Select reports_to, 
    count(reports_to) as reports_count, 
    round(avg(age)) as average_age 
    from Employees 
    group by reports_to
)
Select employee_id, name, reports_count, average_age 
from Employees inner join Report
on Employees.employee_id = Report.reports_to
order by employee_id; 

